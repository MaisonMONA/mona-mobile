{"version":3,"file":"js/162-legacy.dbccb0dc.js","mappings":"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","sources":["webpack://mona/./node_modules/rbush/rbush.min.js","webpack://mona/./node_modules/ol/Collection.js","webpack://mona/./node_modules/ol/CollectionEventType.js","webpack://mona/./node_modules/ol/Feature.js","webpack://mona/./node_modules/ol/ImageTile.js","webpack://mona/./node_modules/ol/renderer/Map.js","webpack://mona/./node_modules/ol/renderer/Composite.js","webpack://mona/./node_modules/ol/MapEvent.js","webpack://mona/./node_modules/ol/MapBrowserEvent.js","webpack://mona/./node_modules/ol/pointer/EventType.js","webpack://mona/./node_modules/ol/MapBrowserEventHandler.js","webpack://mona/./node_modules/ol/MapProperty.js","webpack://mona/./node_modules/ol/structs/PriorityQueue.js","webpack://mona/./node_modules/ol/TileQueue.js","webpack://mona/./node_modules/ol/Map.js","webpack://mona/./node_modules/ol/MapBrowserEventType.js","webpack://mona/./node_modules/ol/MapEventType.js","webpack://mona/./node_modules/ol/Tile.js","webpack://mona/./node_modules/ol/TileRange.js","webpack://mona/./node_modules/ol/TileState.js","webpack://mona/./node_modules/ol/ViewProperty.js","webpack://mona/./node_modules/ol/centerconstraint.js","webpack://mona/./node_modules/ol/resolutionconstraint.js","webpack://mona/./node_modules/ol/View.js","webpack://mona/./node_modules/ol/ViewHint.js","webpack://mona/./node_modules/ol/console.js","webpack://mona/./node_modules/ol/control/Control.js","webpack://mona/./node_modules/ol/control/Attribution.js","webpack://mona/./node_modules/ol/control/Rotate.js","webpack://mona/./node_modules/ol/control/Zoom.js","webpack://mona/./node_modules/ol/control/defaults.js","webpack://mona/./node_modules/ol/coordinate.js","webpack://mona/./node_modules/ol/easing.js","webpack://mona/./node_modules/ol/extent.js","webpack://mona/./node_modules/ol/extent/Relationship.js","webpack://mona/./node_modules/ol/geom/Point.js","webpack://mona/./node_modules/ol/geom/flat/closest.js","webpack://mona/./node_modules/ol/geom/flat/area.js","webpack://mona/./node_modules/ol/geom/LinearRing.js","webpack://mona/./node_modules/ol/geom/flat/interiorpoint.js","webpack://mona/./node_modules/ol/geom/flat/reverse.js","webpack://mona/./node_modules/ol/geom/flat/orient.js","webpack://mona/./node_modules/ol/geom/Polygon.js","webpack://mona/./node_modules/ol/geom/Geometry.js","webpack://mona/./node_modules/ol/geom/SimpleGeometry.js","webpack://mona/./node_modules/ol/geom/flat/contains.js","webpack://mona/./node_modules/ol/geom/flat/deflate.js","webpack://mona/./node_modules/ol/geom/flat/inflate.js","webpack://mona/./node_modules/ol/geom/flat/segments.js","webpack://mona/./node_modules/ol/geom/flat/intersectsextent.js","webpack://mona/./node_modules/ol/geom/flat/simplify.js","webpack://mona/./node_modules/ol/geom/flat/transform.js","webpack://mona/./node_modules/ol/interaction/Property.js","webpack://mona/./node_modules/ol/interaction/Interaction.js","webpack://mona/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://mona/./node_modules/ol/interaction/Pointer.js","webpack://mona/./node_modules/ol/events/condition.js","webpack://mona/./node_modules/ol/interaction/DragPan.js","webpack://mona/./node_modules/ol/interaction/DragRotate.js","webpack://mona/./node_modules/ol/render/Box.js","webpack://mona/./node_modules/ol/interaction/DragBox.js","webpack://mona/./node_modules/ol/interaction/DragZoom.js","webpack://mona/./node_modules/ol/events/Key.js","webpack://mona/./node_modules/ol/interaction/KeyboardPan.js","webpack://mona/./node_modules/ol/interaction/KeyboardZoom.js","webpack://mona/./node_modules/ol/Kinetic.js","webpack://mona/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://mona/./node_modules/ol/interaction/PinchRotate.js","webpack://mona/./node_modules/ol/interaction/PinchZoom.js","webpack://mona/./node_modules/ol/interaction/defaults.js","webpack://mona/./node_modules/ol/layer/Base.js","webpack://mona/./node_modules/ol/layer/Group.js","webpack://mona/./node_modules/ol/layer/Layer.js","webpack://mona/./node_modules/ol/layer/Property.js","webpack://mona/./node_modules/ol/layer/TileProperty.js","webpack://mona/./node_modules/ol/layer/BaseTile.js","webpack://mona/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://mona/./node_modules/ol/layer/Tile.js","webpack://mona/./node_modules/ol/style/Text.js","webpack://mona/./node_modules/ol/style/flat.js","webpack://mona/./node_modules/ol/layer/BaseVector.js","webpack://mona/./node_modules/ol/render/canvas/Instruction.js","webpack://mona/./node_modules/ol/render/VectorContext.js","webpack://mona/./node_modules/ol/render/canvas/Builder.js","webpack://mona/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://mona/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://mona/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://mona/./node_modules/ol/geom/flat/linechunk.js","webpack://mona/./node_modules/ol/geom/flat/straightchunk.js","webpack://mona/./node_modules/ol/render/canvas/TextBuilder.js","webpack://mona/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://mona/./node_modules/ol/geom/flat/textpath.js","webpack://mona/./node_modules/ol/geom/flat/length.js","webpack://mona/./node_modules/ol/render/canvas/Executor.js","webpack://mona/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://mona/./node_modules/ol/render/canvas/Immediate.js","webpack://mona/./node_modules/ol/render/canvas/hitdetect.js","webpack://mona/./node_modules/ol/renderer/vector.js","webpack://mona/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://mona/./node_modules/ol/layer/Vector.js","webpack://mona/./node_modules/ol/proj/Units.js","webpack://mona/./node_modules/ol/proj/Projection.js","webpack://mona/./node_modules/ol/proj/epsg3857.js","webpack://mona/./node_modules/ol/proj/epsg4326.js","webpack://mona/./node_modules/ol/proj/projections.js","webpack://mona/./node_modules/ol/proj/transforms.js","webpack://mona/./node_modules/ol/sphere.js","webpack://mona/./node_modules/ol/proj.js","webpack://mona/./node_modules/ol/render/Event.js","webpack://mona/./node_modules/ol/render/EventType.js","webpack://mona/./node_modules/ol/renderer/Layer.js","webpack://mona/./node_modules/ol/renderer/canvas/Layer.js","webpack://mona/./node_modules/ol/reproj/common.js","webpack://mona/./node_modules/ol/reproj/Triangulation.js","webpack://mona/./node_modules/ol/reproj.js","webpack://mona/./node_modules/ol/reproj/Tile.js","webpack://mona/./node_modules/ol/rotationconstraint.js","webpack://mona/./node_modules/ol/source/OSM.js","webpack://mona/./node_modules/ol/source/Source.js","webpack://mona/./node_modules/ol/structs/RBush.js","webpack://mona/./node_modules/ol/source/VectorEventType.js","webpack://mona/./node_modules/ol/loadingstrategy.js","webpack://mona/./node_modules/ol/featureloader.js","webpack://mona/./node_modules/ol/source/Vector.js","webpack://mona/./node_modules/ol/structs/LRUCache.js","webpack://mona/./node_modules/ol/tilecoord.js","webpack://mona/./node_modules/ol/TileCache.js","webpack://mona/./node_modules/ol/source/TileEventType.js","webpack://mona/./node_modules/ol/tilegrid/TileGrid.js","webpack://mona/./node_modules/ol/tilegrid.js","webpack://mona/./node_modules/ol/source/Tile.js","webpack://mona/./node_modules/ol/tileurlfunction.js","webpack://mona/./node_modules/ol/source/UrlTile.js","webpack://mona/./node_modules/ol/source/TileImage.js","webpack://mona/./node_modules/ol/source/XYZ.js","webpack://mona/./node_modules/ol/tilegrid/common.js","webpack://mona/./node_modules/ol/transform.js"],"sourcesContent":["!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n * @template T\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    const declutterLayers = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    for (let i = declutterLayers.length - 1; i >= 0; --i) {\n      declutterLayers[i].renderDeclutter(frameState);\n    }\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {any}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      width: flatStyle['icon-width'],\n      height: flatStyle['icon-height'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    if (\n      (!replayGroup || replayGroup.isEmpty()) &&\n      (!declutterExecutorGroup || declutterExecutorGroup.isEmpty())\n    ) {\n      return null;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n"],"names":["t","i","module","exports","this","r","e","a","h","n","o","s","l","Math","log","f","exp","u","sqrt","m","max","floor","c","min","p","d","x","length","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","height","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","Property","LENGTH","CollectionEvent","constructor","type","element","index","super","Collection","array","options","on","once","un","unique_","unique","array_","ii","assertUnique_","updateLength_","getLength","extend","arr","forEach","getArray","item","get","insertAt","elem","Error","dispatchEvent","ADD","removeAt","prev","REMOVE","setAt","set","except","Feature","geometryOrProperties","id_","undefined","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","geometry","setGeometry","properties","setProperties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","changed","CHANGE","createStyleFunction","setId","id","name","removeChangeListener","obj","styles","Array","isArray","ImageTile","tileCoord","state","src","crossOrigin","tileLoadFunction","crossOrigin_","src_","key","image_","Image","unlisten_","tileLoadFunction_","getImage","setImage","LOADED","unlistenImage_","handleImageError_","ERROR","getBlankImage","handleImageLoad_","image","naturalWidth","naturalHeight","EMPTY","IDLE","LOADING","bind","ctx","fillStyle","fillRect","canvas","MapRenderer","Disposable","map","map_","dispatchRenderEvent","frameState","calculateMatrices2D","viewState","coordinateToPixelTransform","pixelToCoordinateTransform","size","resolution","rotation","center","forEachFeatureAtCoordinate","coordinate","hitTolerance","checkWrapped","callback","thisArg","layerFilter","thisArg2","result","managed","feature","layer","call","projection","translatedCoordinate","offsets","canWrapX","projectionExtent","getExtent","worldWidth","layerStates","layerStatesArray","numLayers","matches","tmpCoord","j","layerState","hasRenderer","layerRenderer","getRenderer","source","getSource","coordinates","getWrapX","order","distanceSq","b","some","hasFeatureAtCoordinate","hasFeature","getMap","renderFrame","scheduleExpireIconCache","canExpireCache","postRenderFunctions","expireIconCache","expire","CompositeMapRenderer","Map","fontChangeListenerKey_","ObjectEventType","PROPERTYCHANGE","redrawText","element_","document","createElement","position","width","zIndex","className","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","hasListener","event","disposeInternal","parentNode","removeChild","display","PRECOMPOSE","declutterLayers","previousElement","layerIndex","sourceState","getSourceState","unrender","render","renderDeclutter","POSTCOMPOSE","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","getCoordinateFromPixel","preventDefault","stopPropagation","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","Target","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","addEventListener","TOUCHMOVE","passive","emulateClick_","pointerEvent","newEvent","MapBrowserEventType","CLICK","clearTimeout","DBLCLICK","setTimeout","SINGLECLICK","updateActivePointers_","pointerId","target","Object","values","handlePointerUp_","defaultPrevented","isMouseActionButton_","button","PointerEvent","defineProperty","writable","value","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","POINTERDRAG","cancelable","abs","clientX","clientY","removeEventListener","LAYERGROUP","SIZE","TARGET","VIEW","DROP","Infinity","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","tile","getTilesLoading","getState","TileState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","getTilePriority","tileSourceKey","tileCenter","tileResolution","wantedTiles","deltaX","deltaY","removeLayerMapProperty","Layer","setMapInternal","getLayers","setLayerMapProperty","layers","optionsInternal","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","pixelRatio","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","window","overflow","overlayContainer_","pointerEvents","appendChild","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","keyboardEventTarget","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","controls","interactions","onFocusOnly","overlays_","overlays","overlayIdIndex_","renderer_","postRenderFunctions_","tileQueue_","handleTileChange_","MapProperty","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","view","View","then","viewOptions","setView","CollectionEventType","setMap","addOverlayInternal_","toString","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","getLayerGroup","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","setTarget","forEachFeatureAtPixel","getCoordinateFromPixelInternal","getFeaturesAtPixel","features","getAllLayers","addLayersFrom","layerGroup","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewport","viewportPosition","getBoundingClientRect","viewportSize","getSize","scaleX","scaleY","eventPosition","changedTouches","left","top","getTarget","getTargetElement","getView","getProjection","getOverlayById","setLayers","group","collection","getLoadingOrNotReady","getLayerStatesArray","visible","renderer","ready","loading","getPixelFromCoordinate","viewCoordinate","getPixelFromCoordinateInternal","getOverlayContainer","getOverlayContainerStopEvent","targetElement","ownerDocument","browserEvent","mapBrowserEvent","handleMapBrowserEvent","eventType","WHEEL","KEYDOWN","rootNode","contains","documentElement","interactionsArray","getActive","cont","handleEvent","propagationStopped","handlePostRender","tileQueue","hints","viewHints","ViewHint","ANIMATING","INTERACTING","lowOnFrameBudget","Date","now","time","animate","RENDERCOMPLETE","MapEventType","LOADEND","LOADSTART","getAnimating","resolveConstraints","CONTEXTMENU","dispose","unobserve","ShadowRoot","host","setSize","getElementById","Composite","KEYPRESS","observe","cancelAnimationFrame","handleViewPropertyChanged_","updateViewportSize_","Group","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","isDef","getHints","declutterTree","extent","usedTiles","mapId","renderTargets","nextCenter","nextResolution","isNaN","nextRotation","nextExtent","moveStart","MOVESTART","idle","MOVEEND","POSTRENDER","setLayerGroup","oldLayerGroup","computedStyle","getComputedStyle","offsetWidth","parseFloat","offsetHeight","getClientRects","oldSize","parseInt","setViewportSize","Tile","interimTile","transition_","transition","transitionStarts_","interpolate","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","start","delta","inTransition","endTransition","TileRange","containsXY","containsTileRange","tileRange","y","equals","getHeight","getWidth","intersects","createOrUpdate","CENTER","RESOLUTION","ROTATION","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","createSnapToResolutions","resolutions","direction","cappedMaxRes","capped","z","createSnapToPower","power","tolerance","minZoomLevel","offset","cappedZoomLevel","zoomLevel","newResolution","createMinMaxResolution","DEFAULT_MIN_ZOOM","assign","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","ViewProperty","resolutionConstraintInfo","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","zoomFactor","resolutions_","padding_","padding","minZoom_","minZoom","centerConstraint","createCenterConstraint","resolutionConstraint","constraint","rotationConstraint","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","var_args","args","arguments","anchor","animateInternal","animationCount","animationCallback","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","PI","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","jj","NaN","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","currentCenter","currentResolution","w","cos","sin","getCenter","getConstraints","getConstrainResolution","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","maxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","constrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","calculateCenterOn","getViewStateAndExtent","nearest","baseLevel","fit","geometryOrExtent","getType","rotate","userProjection","transform","fitInternal","rotatedExtentForGeometry","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","smoothExtentConstraint","constrainOnlyCenter","multiWorld","isGlobal","defaultMaxZoom","defaultZoomFactor","smoothResolutionConstraint","projExtent","degrees","getMetersPerUnit","defaultMaxResolution","defaultMinResolution","enableRotation","constrainRotation","levels","info","warn","error","level","console","Control","target_","listenerKeys","mapEvent","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","String","title","EventType","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","flatMap","getAttributions","getAttributionsCollapsible","setCollapsible","updateElement_","attributions","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","add","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","Zoom","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","zoomControl","zoomOptions","rotateControl","rotateOptions","attributionControl","attribution","attributionOptions","coordinate1","coordinate2","angle","scale","wrapX","worldsAway","getWorldsAway","sourceExtentWidth","easeIn","easeOut","inAndOut","linear","boundingExtent","createEmpty","extendCoordinate","_boundingExtentXYs","xs","ys","dest","buffer","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsExtent","extent1","extent2","coordinateRelationship","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","end","extendFlatCoordinates","extendXY","forEachCorner","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getCorner","corner","getForViewAndSize","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","returnOrUpdate","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","wrapAndSliceX","isFinite","Point","layout","setCoordinates","point","applyProperties","closestPointXY","closestPoint","minSquaredDistance","squaredDistance","getCoordinates","computeExtent","intersectsExtent","setLayout","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","ends","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","linearRing","twiceArea","linearRings","LinearRing","SimpleGeometry","maxDelta_","maxDeltaRevision_","setFlatCoordinates","getRevision","inflate","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","deflate","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","segmentLength","tmp","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","orientLinearRings","reverse","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","simplifiedEnds","fromExtent","tmpTransform","Geometry","extent_","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","getSimplifiedGeometry","simplifyTransformed","coord","getClosestPoint","intersectsCoordinate","sx","sy","simplify","translate","destination","sourceProj","getUnits","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","getStrideForLayout","nesting","getLayoutForStride","transformGeom2D","simpleGeometry","linearRingContainsExtent","outside","linearRingContainsXY","wn","linearRingsContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","ret","intersectsLineString","coordinatesExtent","point1","point2","intersectsLinearRing","intersectsLinearRingArray","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","snap","round","quantize","dx1","dy1","dx2","dy2","quantizeArray","transform2D","anchorX","anchorY","k","ACTIVE","Interaction","setActive","active","pan","zoomByDelta","DoubleClickZoom","delta_","stopEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","activeElement","focusWithTabindex","hasAttribute","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","noKinetic_","centroid","update","begin","distance","getDistance","getAngle","centerpx","DragRotate","lastAngle_","theta","atan2","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","setPixels","createOrUpdateGeometry","pixels","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","BOXCANCEL","DragBoxEvent","Event","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","factor","UP","DOWN","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","BaseLayer","background_","background","OPACITY","opacity","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","state_","getBackground","getClassName","getLayerState","getZIndex","getOpacity","getVisible","getLayersArray","states","EXTENT","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","GroupEvent","LAYERS","LayerGroup","baseOptions","layersListenerKeys_","listenerKeys_","handleLayersChanged_","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","currentLayers","pos","ownLayerState","defaultZIndex","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","sourceReady_","rendered","SOURCE","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getFeatures","Promise","resolve","getData","isVisible","getMapInternal","find","layerExtent","inView","prepareFrame","MAP","evt","renderEvent","arrayLayerState","createRenderer","PRELOAD","USE_INTERIM_TILES_ON_ERROR","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","getLayer","tileState","getTile","tileSource","tileGrid","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getZForResolution","getTileCoordForCoordAndZ","tileOrigin","getOrigin","tileSize","getTileSize","col","row","gutter","getGutterForProjection","getImageData","loadedTileCallback","tiles","viewResolution","viewCenter","sourceRevision","zDirection","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","tileCoordIntersectsViewport","uid","includes","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","pixelTransform","canvasTransform","useContainer","context","inversePixelTransform","tempTransform","containerReused","clearRect","clipUnrotated","getInterpolate","imageSmoothingEnabled","preRender","clips","clipZs","currentClip","zs","keys","Number","getOpaque","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","getTileCoordExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","clip","save","beginPath","moveTo","lineTo","drawTileImage","restore","unshift","updateUsedTiles","renderedResolution","manageTilePyramid","scheduleExpireCache","postRender","getTileImage","alpha","alphaChanged","globalAlpha","drawImage","postRenderFunction","expireCache","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","TileLayer","BaseTile","DEFAULT_FILL_COLOR","Text","font_","font","rotateWithView_","rotateWithView","scale_","scaleArray_","text_","text","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","fill_","fill","Fill","color","maxAngle_","maxAngle","placement_","placement","overflow_","stroke_","stroke","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getScale","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getRotateWithView","getText","getTextAlign","getJustify","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","getScaleArray","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setRotateWithView","setFill","setScale","setStroke","setText","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","toStyle","flatStyle","Style","prefix","Stroke","lineCap","lineJoin","lineDash","lineDashOffset","miterLimit","iconSrc","iconImg","icon","Icon","img","imgSize","anchorOrigin","anchorXUnits","anchorYUnits","displacement","declutterMode","shapePoints","shape","RegularShape","points","radius","radius1","radius2","circleRadius","circle","Circle","RENDER_ORDER","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","setRenderOrder","renderOrder","styleLike","len","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","Relationship","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","getEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","lineWidth","strokeStyleMiterLimit","getMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasImageBuilder","hitDetectionImage_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","width_","declutterMode_","declutterImageWithText_","myBegin","sharedData","getAnchor","getPixelRatio","getHitDetectionImage","getDeclutterMode","CanvasLineStringBuilder","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","CanvasTextBuilder","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoint","getFlatMidpoints","interiorPoints","getFlatInteriorPoints","beg","keep","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","fillKey","baseline","strokeWidth","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","join","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","ImageBuilder","LineStringBuilder","TextBuilder","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","cache","segmentM","advance","beginX","beginY","startOffset","startLength","endM","flat","singleSegment","previousAngle","replace","iStart","charLength","chars","substring","lineStringLength","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","RegExp","fromCharCode","horizontalTextAlign","align","test","createTextChunks","acc","line","Executor","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","textIsArray","split","reduce","widths","heights","lineWidths","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineHeight","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","setLineDash","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","arc","closePath","fn","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","willReadFrequently","indexes","getPixelIndexArray","imageData","idx","executor","builderTypes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","CanvasImmediateRenderer","userTransform","context_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","setTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","createHitDetectionImageData","transforms","styleFunction","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","setColor","getImageSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","kk","hitDetect","resultFeatures","g","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","renderPointGeometry","renderLineStringGeometry","renderPolygonGeometry","renderMultiPointGeometry","renderMultiLineStringGeometry","renderMultiPolygonGeometry","renderGeometryCollectionGeometry","renderCircleGeometry","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","builderGroup","declutterBuilderGroup","circleReplay","textReplay","renderFeature","replayGroup","listener","imageState","getImageState","ImageState","unlistenImageChange","listenImageChange","renderFeatureInternal","renderGeometry","geometryRenderer","getGeometries","getHitDetectionRenderer","lineStringReplay","polygonReplay","imageBuilderGroup","imageReplay","textBuilderGroup","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","renderWorlds","executorGroup","vectorSource","endWorld","world","getRenderTransform","setupCompositionContext_","compositionContext","releaseCompositionContext_","clipped","match","lastIndexOf","executorGroups","renderIfReadyAndVisible","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","loadExtent","userExtent","loadFeatures","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","VectorLayer","BaseVector","Projection","code_","code","units_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","cosh","PROJECTIONS","fromEPSG4326","input","output","dimension","toEPSG4326","atan","EPSG4326Projection","sourceCode","destinationCode","DEFAULT_RADIUS","c1","c2","lat1","lat2","deltaLatBy2","deltaLonBy2","showCoordinateWarning","disableCoordinateWarning","disable","hide","cloneTransform","identityTransform","addProjection","addProjections","projections","projectionLike","pointResolution","getter","projUnits","getTransformFromProjections","vertices","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","createProjection","defaultCode","equivalent","equalUnits","transformFunc","sourceProjection","destinationProjection","getTransform","transformExtent","setUserProjection","getUserProjection","useGeographic","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","addCommon","RenderEvent","PRERENDER","LayerRenderer","Observable","boundHandleImageChange_","handleImageChange_","layer_","forEachLoadedTile","loadImage","canvasPool","pixelContext","createPixelContext","CanvasLayerRenderer","pixelContext_","err","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","getContext","transformOrigin","topLeft","topRight","bottomRight","bottomLeft","inverted","dispatchRenderEvent_","ERROR_THRESHOLD","MAX_SUBDIVISION","MAX_TRIANGLE_WIDTH","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","targetCoverageX","isNotFinite","centerSrc","centerSrcEstimX","centerSrcErrorSquared","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","isBrokenDiagonalRendering","globalCompositeOperation","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","calculateSourceExtentResolution","triangulation","sources","renderEdges","pixelRound","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","steps","ud","vd","step","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","leftToLoad","sourceListenKey","unlistenSources_","createSnapToN","createSnapToZero","ATTRIBUTION","OSM","url","attributionsCollapsible","cacheSize","opaque","reprojectionErrorThreshold","Source","attributions_","adaptAttributions","attributionsCollapsible_","wrapX_","interpolate_","viewResolver","viewRejector","self","viewPromise_","reject","refresh","setAttributions","attributionLike","RBush","maxEntries","rbush_","items_","extents","items","bbox","getAll","getInExtent","forEach_","forEachInExtent","concat","rbush","ADDFEATURE","CHANGEFEATURE","CLEAR","REMOVEFEATURE","FEATURESLOADSTART","FEATURESLOADEND","FEATURESLOADERROR","withCredentials","loadFeaturesXhr","format","success","failure","xhr","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","dataProjection","addFeatures","VectorSourceEvent","VectorSource","loader_","format_","url_","loader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","alreadyLoaded","object","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","containsKey","hasOwnProperty","entry","value_","key_","newer","older","getKeys","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","fromKey","hash","withinExtentAndZ","getFullTileRange","TileCache","pruneExceptNewestZ","TILELOADSTART","TILELOADEND","TILELOADERROR","tmpTileCoord","DECIMALS","TileGrid","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","opt_direction","fullTileRanges","getForProjection","createForProjection","extentFromProjection","createForExtent","resolutionsFromExtent","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","getTileGrid","getTileCoordForTileUrlFunction","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","expandUrl","urls","exec","startCharCode","charCodeAt","stopCharCode","charCode","stop","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","XYZ","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","create","setFromArray","transform1","transform2","makeScale","compose","makeInverse","det","determinant","mat","transformStringDiv","transformString","node"],"sourceRoot":""}